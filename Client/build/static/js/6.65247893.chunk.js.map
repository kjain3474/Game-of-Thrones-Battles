{"version":3,"sources":["components/search.js","components/home.js"],"names":["locationEngine","axios","get","then","res","locations","data","map","location","push","Bloodhound","initialize","queryTokenizer","tokenizers","whitespace","datumTokenizer","obj","local","Search","useState","searchValue","setSearchValue","results","setResults","searchInput","useRef","handleSearch","useCallback","locationSync","datums","result","index","locationObj","name","search","useDebounce","produce","draftResults","splice","useTrail","transform","opacity","trail","set","className","label","style","div","type","value","ref","onChange","event","target","length","onClick","key","to","size","Home","props","Fragment","Helmet"],"mappings":"qNASIA,EAAiB,K,OAErBC,EAAMC,IAAN,aACCC,MAAK,SAAAC,GACJ,IAAMC,EAAY,GAElBD,EAAIE,KAAKC,KAAI,SAASC,GAGpB,OADAH,EAAUI,KAAK,CAACD,SAAUA,IACnB,QAITR,EAAiB,IAAIU,IAAW,CAC9BC,YAAY,EACZC,eAAgBF,IAAWG,WAAWC,WACtCC,eAAgBL,IAAWG,WAAWG,IAAIF,WAAW,YACrDG,MAAOZ,OAsHIa,MAhHf,WAAmB,IAAD,EACsBC,mBAAS,IAD/B,mBACTC,EADS,KACIC,EADJ,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,KAGVC,EAAcC,iBAAO,MAErBC,EAAeC,uBAAY,SAACH,GAChC,IAAMF,EAAU,GAEVM,EAAe,SAACC,GACpBA,EAAOtB,KAAI,SAACuB,EAAQC,GAClB,IAAMC,EAAc,CAClBC,KAAMH,EAAOtB,UAGf,OADAc,EAAQb,KAAKuB,GACN,QAETT,EAAW,GAAD,OAAKD,KAQjBtB,EAAekC,OAAOV,GALA,SAACK,GAErB7B,EAAekC,OAAOV,EAAaI,QAIpC,IAEHO,aACE,WACMf,EACFM,EAAaN,GAEbG,EACEa,YAAQd,GAAS,SAACe,GAChBA,EAAaC,OAAO,SAK5B,GACA,CAAClB,IAxCa,MA2CKmB,YAAS,GAAG,iBAAO,CACtCC,UAAW,0BACXC,QAAS,MA7CK,mBA2CTC,EA3CS,KAkDhB,OAFAC,EAhDgB,MAgDZ,CAACH,UAAW,yBAA0BC,QAAS,IAGjD,yBAAKG,UAAU,UACb,kBAAC,IAASC,MAAV,CAAgBC,MAAOJ,EAAM,IAC1B,8BAEH,kBAAC,IAASK,IAAV,CAAcH,UAAU,OAAOE,MAAOJ,EAAM,KAE5C,kBAAC,IAASK,IAAV,CAAcH,UAAU,uBAAuBE,MAAOJ,EAAM,IAC1D,2BACEM,KAAK,OACLC,MAAO7B,EACP8B,IAAK1B,EACL2B,SAAU,SAACC,GACT/B,EAAe+B,EAAMC,OAAOJ,UAIhC,yBAAKL,UAAS,iBACZ,kBAAC,IAAD,OAGDxB,EAAYkC,OAAS,GACpB,yBACEV,UAAS,eACTW,QAAS,WACPlC,EAAe,IACfE,EAAW,MAGb,kBAAC,IAAD,QAKLD,EAAQgC,OAAS,GAChB,yBAAKV,UAAU,WACZtB,EAAQf,KAAI,SAACuB,EAAQC,GAElB,OACE,kBAAC,IAAD,CAAMyB,IAAKzB,EAAO0B,GAAE,kBAAa3B,EAAOG,OACtC,yBAAKW,UAAU,UACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eAAf,UACMd,EAAOG,QAGf,yBAAKW,UAAU,eACb,kBAAC,IAAD,CAAuBc,KAAM,c,QCrGpCC,UAtBf,SAAcC,GACZ,OACE,kBAAC,IAAMC,SAAP,KAEI,yBAAKjB,UAAU,QACb,kBAACkB,EAAA,EAAD,KACE,iDAGF,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,UACb,kBAAC,EAAD","file":"static/js/6.65247893.chunk.js","sourcesContent":["import Bloodhound from 'corejs-typeahead';\r\nimport produce from 'immer';\r\nimport React, {useState, useCallback, useRef} from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport {Link} from 'react-router-dom';\r\nimport {useTrail, animated} from 'react-spring';\r\nimport {useDebounce} from 'react-use';\r\nimport axios from 'axios';\r\n\r\nvar locationEngine = null;\r\n\r\naxios.get(`/api/list`)\r\n.then(res => {\r\n  const locations = [];\r\n\r\n  res.data.map(function(location)\r\n  {\r\n    locations.push({location: location});\r\n    return null;\r\n  })\r\n\r\n\r\n  locationEngine = new Bloodhound({\r\n    initialize: true,\r\n    queryTokenizer: Bloodhound.tokenizers.whitespace,\r\n    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('location'),\r\n    local: locations,\r\n  });\r\n\r\n})\r\n\r\n\r\nfunction Search() {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const searchInput = useRef(null);\r\n\r\n  const handleSearch = useCallback((searchInput) => {\r\n    const results = [];\r\n\r\n    const locationSync = (datums) => {\r\n      datums.map((result, index) => {\r\n        const locationObj = {\r\n          name: result.location,\r\n        };\r\n        results.push(locationObj);\r\n        return null;\r\n      });\r\n      setResults([...results]);\r\n    };\r\n\r\n    const locationAsync = (datums) => {\r\n      // to handle async remote call on initial launch\r\n      locationEngine.search(searchInput, locationSync);\r\n    };\r\n\r\n    locationEngine.search(searchInput, locationAsync);\r\n  }, []);\r\n\r\n  useDebounce(\r\n    () => {\r\n      if (searchValue) {\r\n        handleSearch(searchValue);\r\n      } else {\r\n        setResults(\r\n          produce(results, (draftResults) => {\r\n            draftResults.splice(0);\r\n          })\r\n        );\r\n      }\r\n    },\r\n    10,\r\n    [searchValue]\r\n  );\r\n\r\n  const [trail, set] = useTrail(3, () => ({\r\n    transform: 'translate3d(0, 10px, 0)',\r\n    opacity: 0,\r\n  }));\r\n\r\n  set({transform: 'translate3d(0, 0px, 0)', opacity: 1});\r\n\r\n  return (\r\n    <div className=\"Search\">\r\n      <animated.label style={trail[0]}>\r\n        {'Search Battles by Location'}\r\n      </animated.label>\r\n      <animated.div className=\"line\" style={trail[1]}></animated.div>\r\n\r\n      <animated.div className=\"search-input-wrapper\" style={trail[2]}>\r\n        <input\r\n          type=\"text\"\r\n          value={searchValue}\r\n          ref={searchInput}\r\n          onChange={(event) => {\r\n            setSearchValue(event.target.value);\r\n          }}\r\n        />\r\n\r\n        <div className={`search-button`}>\r\n          <Icon.Search />\r\n        </div>\r\n\r\n        {searchValue.length > 0 && (\r\n          <div\r\n            className={`close-button`}\r\n            onClick={() => {\r\n              setSearchValue('');\r\n              setResults([]);\r\n            }}\r\n          >\r\n            <Icon.X />\r\n          </div>\r\n        )}\r\n      </animated.div>\r\n\r\n      {results.length > 0 && (\r\n        <div className=\"results\">\r\n          {results.map((result, index) => {\r\n\r\n              return (\r\n                <Link key={index} to={`battles/${result.name}`}>\r\n                  <div className=\"result\">\r\n                    <div className=\"result-left\">\r\n                      <div className=\"result-name\">\r\n                        {`${result.name}`}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"result-type\">\r\n                      <Icon.ArrowRightCircle size={14} />\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              );\r\n  \r\n          })}\r\n        </div>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Search;\r\n","import Search from './search';\r\n\r\nimport React from 'react';\r\nimport {Helmet} from 'react-helmet';\r\n\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {(\r\n        <div className=\"Home\">\r\n          <Helmet>\r\n            <title>G.O.T Battles</title>\r\n          </Helmet>\r\n\r\n          <div className=\"home-left\">\r\n            <div className=\"header\">\r\n              <Search />\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}